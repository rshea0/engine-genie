name: Release

on:
  workflow_dispatch:
  push:
    branches: [$default-branch]
    tags: ['v*.*.*']

jobs:
  build:
    strategy:
      matrix:
        os:
          - windows-latest
          - macos-latest
          - ubuntu-latest
        node-version: [14.x]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Delete current release assets
        uses: Kellojo/delete-release-assets-action@v1.8
        with:
          delete-only-drafts: true
          github-access-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      # - name: Cache node modules
      #   uses: actions/cache@v2
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-

      - name: Install node modules
        run: npm ci

      - name: Prepare for app notarization
        if: startsWith(matrix.os, 'macos')
        # Import Apple API key for app notarization on macOS
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.APPLE_API_KEY }}' > ~/private_keys/AuthKey_${{ secrets.APPLE_API_KEY_ID }}.p8

      - name: Build/release Electron app
        run: npx vue-cli-service electron:build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # codesign
          CSC_LINK: ${{ secrets.MAC_CERTS }}
          CSC_KEY_PASSWORD: ${{ secrets.MAC_CERTS_PASSWORD }}
          # notarization
          API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          API_KEY_ISSUER_ID: ${{ secrets.APPLE_API_KEY_ISSUER_ID }}

name: Standalone CI

on:
  - workflow_dispatch
  # push:
  #   tags:
  #     - 'v*.*.*'
  #   branches: [$default-branch]
  # pull_request:
  #   branches: [$default-branch]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node-version: [14.x]

    environment: production

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install node modules
        run: npm ci

      - name: Get package.json version
        id: package-version
        run: |
          PACKAGE_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
          echo ::set-output name=current-version::$PACKAGE_VERSION

      - name: Run webpack
        run: npm run standalone:webpack

      - name: Install NSIS
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt install nsis

      - name: Pack Windows
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: npm run standalone:pack:win

      - name: Publish Windows (tar)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: npx oclif-dev publish -r pack -t win32-x64,win32-x86

      - name: Publish Windows (installer)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: 'pack/dist/win'
          destination_dir: 'enjinn-v${{ steps.package-version.outputs.current-version }}'

      - name: Pack macOS
        if: ${{ matrix.os == 'macos-latest' }}
        run: npm run standalone:pack:macos

      - name: Publish macOS (tar)
        if: ${{ matrix.os == 'macos-latest' }}
        run: npx oclif-dev publish -r pack -t darwin-x64

      - name: Publish macOS (installer)
        if: ${{ matrix.os == 'macos-latest' }}
        uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: 'pack/dist/macos'
          destination_dir: 'enjinn-v${{ steps.package-version.outputs.current-version }}'
